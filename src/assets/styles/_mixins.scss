@import './variables';

@mixin flexbox {
    display: -webkit-box;
    display: -moz-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
}

@mixin inlineFlexCenter {
    display: inline-flex;
    align-items: center;
    justify-content: center;
}

@mixin flexAlign() {
    @include flexbox;
    align-items: center;
}

@mixin falign($value) {
    @include flexbox;
    -webkit-box-align: $value;
    align-items: $value;
}

@mixin fpos($a-item, $j-align) {
    @include flexbox;
    align-items: $a-item;
    justify-content: $j-align;
}

@mixin flexCenter() {
    @include flexbox;
    align-items: center;
    justify-content: center;
}

@mixin position($position, $top: null, $right: null, $bottom: null, $left: null) {
    position: $position;
    top: $top;
    right: $right;
    bottom: $bottom;
    left: $left;
}

@mixin imgCover {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

@mixin modalRootStyles {
    flex-grow: 1;
    display: flex;

    @media screen and (min-width: $breakpoint_768) {
        justify-content: center;
        align-items: flex-start;
    }
}

@mixin modalBaseStyles {
    flex-grow: 1;
    position: relative;
    display: flex;
    flex-direction: column;
    padding: 0 20px 6px;
    border-bottom: none;

    @media screen and (max-width: $breakpoint_320) {
        padding: 0 15px 6px;
    }
}

@mixin modalCloseStyles {
    @include position(absolute, 0, 0, auto, auto);
    cursor: pointer;
    z-index: $zIndexModal + 1;

    /* Safari didn't know how to baseline-align svg icon and text */
    @include flexAlign;
    width: auto;
    margin: 0 20px;
    border: 0;
    background-color: transparent;
    color: var(--whiteColor);
    width: 28px;
    height: 28px;
    background-color: var(--closeBg);
    padding: 7px;

    @media screen and (max-width: $breakpoint_767) {
        top: -3px;
    }

    @media screen and (max-width: $breakpoint_320) {
        top: -1px;
        width: 20px;
        height: 20px;
        padding: 5px;
    }

    img {
        max-width: 100%;
        height: 100%;
    }

    &:enabled:hover {
        color: var(--whiteColor);
        box-shadow: none;
        text-decoration: none;
    }

    &:enabled:active {
        color: var(--whiteColor);
    }
}

@mixin avatusH6FontStyles {
    font-family: $fontFamilyBold;
    font-size: 12px;
    line-height: 18px;
    letter-spacing: 1.5px;
    text-transform: uppercase;
    margin-top: 10px;
    margin-bottom: 8px;

    @media screen and (min-width: $breakpoint_768) {
        line-height: 16px;
        margin-top: 10px;
        margin-bottom: 6px;
    }
}

@mixin avatusModalCloseText {
    @include avatusH6FontStyles;
    margin: -2.5px 0 0 0;

    @media screen and (min-width: $breakpoint_768) {
        margin-top: -1px;
    }
}

@mixin avatusModalCloseIcon {
    display: inline-block;
    margin-left: 8px;
    padding: 2px 0 4px;
    box-sizing: content-box;
}

@mixin imgContain {
    width: 100%;
    height: 100%;
    object-fit: contain;
}

@mixin text-truncate($line, $height: "") {
    display: block !important;
    display: -webkit-box !important;
    @include line-clamp($line);
    -webkit-box-orient: vertical;
    -moz-box-orient: vertical;
    -ms-box-orient: vertical;
    -o-box-orient: vertical;
    box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: normal;
    height: $height;
    min-height: $height;
}

@mixin line-clamp($line) {
    -webkit-line-clamp: $line;
    -moz-line-clamp: $line;
    -ms-line-clamp: $line;
    -o-line-clamp: $line;
    line-clamp: $line;
}

.flex_row {
    display: flex;
    margin: 0;
}

